kind: Template
apiVersion: v1
metadata:
  name: microstore
  annotations:
    description: MicroStore .NET Core microservices application template
    tags: microservice,dotnet
    iconClass: icon-dotnet
labels:
  template: microstore
objects:
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: view
  subjects:
  - kind: ServiceAccount
    name: default
# Identity Service
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${IDENTITY_SERVICE_NAME}"
  stringData:
    database-password: "${DATABASE_PASSWORD}"
    connect-string: Host=${IDENTITY_DATABASE_SERVICE_NAME};Database=${IDENTITY_DATABASE_NAME};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD}
- kind: Service
  apiVersion: v1
  metadata:
    name: "${IDENTITY_SERVICE_NAME}"
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${IDENTITY_DATABASE_SERVICE_NAME}",
        "kind": "Service"}]'
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: "${IDENTITY_SERVICE_NAME}"
- kind: Route
  apiVersion: v1
  metadata:
    name: "${IDENTITY_SERVICE_NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    path: "/${IDENTITY_SERVICE_ROUTE_ENTRY}"
    to:
      kind: Service
      name: "${IDENTITY_SERVICE_NAME}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${IDENTITY_SERVICE_NAME}"
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${IDENTITY_SERVICE_NAME}"
        from:
          kind: ImageStreamTag
          name: "${IDENTITY_SERVICE_REPOSITORY}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${IDENTITY_SERVICE_NAME}"
    template:
      metadata:
        name: "${IDENTITY_SERVICE_NAME}"
        labels:
          name: "${IDENTITY_SERVICE_NAME}"
      spec:
        containers:
        - name: "${IDENTITY_SERVICE_NAME}"
          image: " "
          ports:
          - containerPort: 8080
          env:
          - name: PATH_BASE
            value: "${IDENTITY_SERVICE_PATH_BASE}"
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
          - name: ConnectionStrings__DefaultConnection
            valueFrom:
              secretKeyRef:
                name: "${IDENTITY_SERVICE_NAME}"
                key: connect-string
          - name: IdentityUrl
            value: "http://${APPLICATION_DOMAIN}/${IDENTITY_SERVICE_ROUTE_ENTRY}"
          - name: SpaClient
            value: "http://${APPLICATION_DOMAIN}"
          - name: ProductsClient
            value: "http://${APPLICATION_DOMAIN}/${PRODUCT_SERVICE_ROUTE_ENTRY}"
          - name: BookingClient
            value: "http://${APPLICATION_DOMAIN}/${BOOKING_SERVICE_ROUTE_ENTRY}"
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          livenessProbe:
            httpGet:
              path: "/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: "/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 30
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${IDENTITY_DATABASE_SERVICE_NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_POSTGRESQL_CAPACITY}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${IDENTITY_DATABASE_SERVICE_NAME}"
    annotations:
      description: Exposes the database server
  spec:
    ports:
    - port: 5432
      targetPort: 5432
    selector:
      name: "${IDENTITY_DATABASE_SERVICE_NAME}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${IDENTITY_DATABASE_SERVICE_NAME}"
    annotations:
      description: Defines how to deploy the database
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${IDENTITY_DATABASE_SERVICE_NAME}"
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: postgresql:9.6
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${IDENTITY_DATABASE_SERVICE_NAME}"
    template:
      metadata:
        name: "${IDENTITY_DATABASE_SERVICE_NAME}"
        labels:
          name: "${IDENTITY_DATABASE_SERVICE_NAME}"
      spec:
        volumes:
        - name: "${IDENTITY_DATABASE_SERVICE_NAME}-data"
          persistentVolumeClaim:
            claimName: "${IDENTITY_DATABASE_SERVICE_NAME}"
        containers:
        - name: "${IDENTITY_DATABASE_SERVICE_NAME}"
          image: " "
          ports:
          - containerPort: 5432
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE}
                -c 'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          volumeMounts:
          - name: "${IDENTITY_DATABASE_SERVICE_NAME}-data"
            mountPath: "/var/lib/pgsql/data"
          env:
          - name: POSTGRESQL_USER
            value: "${DATABASE_USER}"
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${IDENTITY_SERVICE_NAME}"
                key: database-password
          - name: POSTGRESQL_DATABASE
            value: "${IDENTITY_DATABASE_NAME}"
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: "${POSTGRESQL_MAX_CONNECTIONS}"
          - name: POSTGRESQL_SHARED_BUFFERS
            value: "${POSTGRESQL_SHARED_BUFFERS}"
          resources:
            limits:
              memory: "${MEMORY_POSTGRESQL_LIMIT}"
parameters:
- name: IDENTITY_SERVICE_NAME
  displayName: IdentityService Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: identityservice
- name: IDENTITY_SERVICE_REPOSITORY
  displayName: IdentityService Repository
  description: Repository.
  required: true
  value: marcinkruszynski/identityservice
- name: IDENTITY_SERVICE_ROUTE_ENTRY
  displayName: IdentityService Route Entry
  description: Route Path.
  required: true
  value: identity
- name: PRODUCT_SERVICE_ROUTE_ENTRY
  displayName: ProductService Route Entry
  description: Route Path.
  required: true
  value: products
- name: BOOKING_SERVICE_ROUTE_ENTRY
  displayName: BookingService Route Entry
  description: Route Path.
  required: true
  value: booking
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the .NET Core container can use.
  value: 128Mi
- name: MEMORY_POSTGRESQL_LIMIT
  displayName: Memory Limit (PostgreSQL)
  required: true
  description: Maximum amount of memory the PostgreSQL container can use.
  value: 128Mi
- name: VOLUME_POSTGRESQL_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi
  value: 1Gi
  required: true
- name: DOTNET_IMAGE_STREAM_TAG
  displayName: ".NET builder"
  required: true
  description: The image stream tag which is used to build the code.
  value: dotnet:2.1
- name: NAMESPACE
  displayName: Namespace
  required: true
  description: The OpenShift Namespace where the .NET builder ImageStream resides.
  value: openshift
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the .NET Core service, if left
    blank a value will be defaulted.
  value: albania.io
- name: IDENTITY_SERVICE_PATH_BASE
  required: true
  displayName: Identity Service Path Base
  value: /identity
- name: IDENTITY_DATABASE_SERVICE_NAME
  required: true
  displayName: Identity Database Service Name
  value: identitydb
- name: DATABASE_USER
  displayName: Database Username
  generate: expression
  from: user[A-Z0-9]{3}
- name: DATABASE_PASSWORD
  displayName: Database Password
  generate: expression
  from: "[a-zA-Z0-9]{8}"
- name: IDENTITY_DATABASE_NAME
  required: true
  displayName: Database Name
  value: identitydb
- name: POSTGRESQL_MAX_CONNECTIONS
  displayName: Maximum Database Connections
  value: '100'
- name: POSTGRESQL_SHARED_BUFFERS
  displayName: Shared Buffer Amount
  value: 12MB